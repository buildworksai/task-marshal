name: Publish Task-Marshal Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      registry:
        description: 'Registry to publish to'
        required: true
        default: 'both'
        type: choice
        options:
          - npm
          - github
          - both

env:
  NODE_VERSION: '18'
  REGISTRY_NPM: 'https://registry.npmjs.org'
  REGISTRY_GITHUB: 'https://npm.pkg.github.com'

jobs:
  # Quality checks before publishing
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Build package
        run: npm run build

      - name: Check build output
        run: |
          ls -la dist/
          test -f dist/server.js

  # Publish to NPM Registry
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event.inputs.registry == 'npm' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.REGISTRY_NPM }}

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm run publish:npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify NPM publication
        run: |
          echo "Package published to NPM: https://www.npmjs.com/package/@buildworksai/task-marshal"

  # Publish to GitHub Package Registry
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event.inputs.registry == 'github' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.REGISTRY_GITHUB }}

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to GitHub Packages
        run: npm run publish:github
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify GitHub publication
        run: |
          echo "Package published to GitHub Packages: https://github.com/buildworksai/task-marshal/packages"

  # Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-npm, publish-github]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Generate changelog (simplified)
          echo "## What's New in v$VERSION" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Features" >> CHANGELOG.md
          echo "- Enhanced task management capabilities" >> CHANGELOG.md
          echo "- Improved natural language processing" >> CHANGELOG.md
          echo "- Better performance and reliability" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Installation" >> CHANGELOG.md
          echo "\`\`\`bash" >> CHANGELOG.md
          echo "npm install @buildworksai/task-marshal" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Task-Marshal v${{ steps.changelog.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  # Notify on completion
  notify:
    name: Notify Completion
    runs-on: ubuntu-latest
    needs: [publish-npm, publish-github, create-release]
    if: always()
    steps:
      - name: Notify success
        if: needs.publish-npm.result == 'success' && needs.publish-github.result == 'success'
        run: |
          echo "‚úÖ Task-Marshal successfully published to both NPM and GitHub Packages!"
          echo "üì¶ NPM: https://www.npmjs.com/package/@buildworksai/task-marshal"
          echo "üì¶ GitHub: https://github.com/buildworksai/task-marshal/packages"

      - name: Notify failure
        if: needs.publish-npm.result == 'failure' || needs.publish-github.result == 'failure'
        run: |
          echo "‚ùå Publishing failed. Check the logs for details."
          exit 1
