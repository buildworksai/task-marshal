name: Publish Task-Marshal

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      registry:
        description: 'Registry to publish to'
        required: true
        default: 'both'
        type: choice
        options:
          - npm
          - github
          - both

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          npm run lint
          npm run type-check
          npm run test
          npm run build

      - name: Check build output
        run: |
          ls -la dist/
          test -f dist/server.js

      - name: Publish to npmjs
        if: github.event.inputs.registry == 'npm' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          echo "Current version: ${CURRENT}"
          
          # Temporarily move .npmrc to avoid GitHub Packages registry conflict
          if [ -f .npmrc ]; then
            mv .npmrc .npmrc.backup
          fi
          
          # Create temporary .npmrc for npm registry
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
          echo "always-auth=true" >> .npmrc
          
          # Check if package exists and get published version
          if PUBLISHED=$(npm view @buildworksai/task-marshal version 2>/dev/null); then
            echo "Published version: ${PUBLISHED}"
            if [ "$CURRENT" != "$PUBLISHED" ]; then
              echo "Publishing new version ${CURRENT} to npm..."
              npm publish --loglevel=verbose
            else
              echo "Skip npmjs publish: ${CURRENT} already published"
            fi
          else
            echo "Package not found on npm, publishing first version ${CURRENT}..."
            npm publish --loglevel=verbose
          fi
          
          # Restore original .npmrc
          if [ -f .npmrc.backup ]; then
            mv .npmrc.backup .npmrc
          else
            rm -f .npmrc
          fi

      - name: Configure GitHub Packages registry
        if: github.event.inputs.registry == 'github' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          cp package.json package.npm.json
          node -e '
            const fs = require("fs");
            const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
            pkg.publishConfig = { registry: "https://npm.pkg.github.com" };
            fs.writeFileSync("package.json", JSON.stringify(pkg, null, 2));
          '
          echo "@buildworksai:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

      - name: Setup Node.js for GitHub Packages
        if: github.event.inputs.registry == 'github' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com
          scope: '@buildworksai'

      - name: Publish to GitHub Packages
        if: github.event.inputs.registry == 'github' || github.event.inputs.registry == 'both' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Attempting to publish to GitHub Packages..."
          CURRENT=$(node -p "require('./package.json').version")
          echo "Current version: ${CURRENT}"
          
          # Check if we have proper permissions for GitHub Packages
          if npm whoami --registry=https://npm.pkg.github.com 2>/dev/null; then
            echo "✅ GitHub Packages authentication successful"
            if npm publish --loglevel=verbose; then
              echo "✅ Successfully published to GitHub Packages"
            else
              echo "⚠️ GitHub Packages publish failed (this is optional - main npm publish succeeded)"
            fi
          else
            echo "⚠️ GitHub Packages authentication failed - skipping publish"
            echo "This is optional. Package is available on npm registry: https://www.npmjs.com/package/@buildworksai/task-marshal"
          fi

      - name: Restore package.json
        if: always()
        run: |
          if [ -f package.npm.json ]; then
            mv -f package.npm.json package.json
          fi

      - name: Notify completion
        run: |
          echo "✅ Task-Marshal publishing workflow completed!"
          echo "📦 NPM: https://www.npmjs.com/package/@buildworksai/task-marshal"
          echo "📦 GitHub: https://github.com/buildworksai/task-marshal/packages"